<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | 零與壹的世界]]></title>
  <link href="http://ijam.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://ijam.github.com/"/>
  <updated>2012-04-11T00:57:13+08:00</updated>
  <id>http://ijam.github.com/</id>
  <author>
    <name><![CDATA[ijam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[iOS] 接收推播的三種狀態]]></title>
    <link href="http://ijam.github.com/blog/2012/04/04/ios-jie-shou-tui-bo-de-san-zhong-zhuang-tai/"/>
    <updated>2012-04-04T16:43:00+08:00</updated>
    <id>http://ijam.github.com/blog/2012/04/04/ios-jie-shou-tui-bo-de-san-zhong-zhuang-tai</id>
    <content type="html"><![CDATA[<p>完成推播註冊後，由server發送payload經由APNs到你的APP時，</p>

<p>主要會有三種狀態來處理你的推播資訊：</p>

<h4>APP正常運行或背景執行時：</h4>

<p>主要都是利用這個method做處理，只是需要經過ㄧ些判斷。</p>

<p>如：</p>

<pre><code>- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo
{
  if (nil == userInfo) {
    return;
  }

  NSDictionary *notification = userInfo;

  if (isBackground_) {
    //由背景執行開啟
  } else {
    //正常情況
  }
}
</code></pre>

<h4>APP關閉時：</h4>

<p>此時APP是未開啓狀態，如果先前已有對此APP開啟推播通知，那麼藉由推播通知開啟APP時，就會觸發以下method，你可以利用launchOptions來處理你的推播資訊。</p>

<p>如：</p>

<pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  if (nil != launchOptions) {
    NSDictionary *notification = [launchOptions objectForKey:UIApplicationLaunchOptionsRemoteNotificationKey];
    ...
  }
}
</code></pre>

<p>以上都是需要經由推播通知進入App，如果不理通知再自行進入App則不會發生以上情況。</p>

<p>done..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[iOS] Apple Push Notification service(APNs)]]></title>
    <link href="http://ijam.github.com/blog/2012/04/01/ios-apple-push-notification-service-apns/"/>
    <updated>2012-04-01T01:50:00+08:00</updated>
    <id>http://ijam.github.com/blog/2012/04/01/ios-apple-push-notification-service-apns</id>
    <content type="html"><![CDATA[<p>推播服務在APP中是經常會使用到的功能，利用推播可以很容易的通知你的APP使用者某些訊息，如：APP有更新啥新玩意兒，由於可以自定sound或badge等的出現，可以增加曝光度、吸引使用者目光，在使用者ㄧ時手癢情況下，或許可以多增加些廣告收益(誤)。</p>

<p>好了，首先要先跟APNS註冊推播服務</p>

<pre><code>[[UIApplication sharedApplication] registerForRemoteNotificationTypes:
UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert];
</code></pre>

<p>這段主要是要與APNS說你想使用推播，你可以自行選擇notification的types。</p>

<p>完成後，必須傳送device token等的相關資訊給你的provider(server)。token是必要的，因為APNs會利用token跟device做溝通，當然，你也可以傳送些額外的資訊。</p>

<pre><code>- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken
{
  ...
}
</code></pre>

<p>傳送過程中若有發生錯誤，會反應在底下這個method。</p>

<pre><code>- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error
{
  NSLog(@"The error is: %@", error);
}
</code></pre>

<h5>原因可能多半是</h5>

<ul>
<li>網路不通 or 在simulator執行</li>
<li>AppID有問題</li>
<li>Sandbox or Production環境不對</li>
</ul>


<p>檢查下吧，再不行就dump出來看吧:p</p>

<p>基本上，這樣就可以接收來自server的推播了，local端若想玩玩的話，可以試試<a href="https://github.com/stefanhafeneger/PushMeBaby">PushMeBaby</a>這套application。</p>

<p>參考來源：<a href="http://goo.gl/aQpwo">官方</a></p>
]]></content>
  </entry>
  
</feed>
